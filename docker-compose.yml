version: "3"
services:
  api.golang-api.dev:
    build: .
    image: api.golang-api.dev
    container_name: api.golang-api.dev
    volumes:
      - .:/go/src/
    ports:
      - 8585:8585

  zookeeper.golang-api.dev:
    image: wurstmeister/kafka:latest
    container_name: zookeeper.golang-api.dev
    networks:
      - bubble
    ports:
      - "2182:2181"

  kafka.golang-api.dev:
    image: wurstmeister/kafka:latest
    container_name: kafka.golang-api.dev
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka.golang-api.dev
      KAFKA_ADVERTISED_PORT: 9098
      KAFKA_PORT: 9098
      KAFKA_ZOOKEEPER_CONNECT: zookeeper.golang-api.dev:2181
      KAFKA_BROKER_ID: 1
    networks:
      - bubble
    ports:
      - "9098:9098"
    depends_on:
      - zookeeper.golang-api.dev

  kafka-ui.golang-api.dev:
    container_name: kafka-ui.golang-api.dev
    image: docker.redpanda.com/vectorized/console:v2.1.1
    restart: on-failure
    hostname: kafka-ui
    depends_on:
      - kafka.golang-api.dev
    ports:
      - "7002:8080"
    environment:
      KAFKA_BROKERS: "kafka.golang-api.dev:9098"
    networks:
      - bubble

  db.golang-api.dev:
    image: mysql:8
    container_name: db.golang-api.dev
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: "dev_database"
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_ROOT_USER: "root"
    ports:
      - 4307:3306
    volumes:
      - ./dbdata:/var/lib/mysql/
    networks:
      - bubble

networks:
  bubble:
    external: true